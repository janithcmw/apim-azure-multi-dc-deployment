# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-gateway-deployment-2
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.wso2.deployment.am.gateway.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.wso2.deployment.am.gateway.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.wso2.deployment.am.gateway.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-gateway
  template:
    metadata:
      annotations:
        checksum.am.km.conf: {{ include (print $.Template.BasePath "/am/gateway/deployment-2/apim-321-multi-dc-aks-am-gateway-conf-2.yaml") . | sha256sum }}
      labels:
        deployment: {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-gateway
    spec:
      initContainers:
      - name: init-apim-analytics
        image: busybox:1.32
        command: ['sh', '-c', 'echo -e "Checking for the availability of WSO2 API Manager Analytics Worker deployment"; while ! nc -z {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-analytics-worker-service 7712; do sleep 1; printf "-"; done; echo -e "  >> WSO2 API Manager Analytics Worker has started";']
      - name: init-km
        image: busybox:1.32
        command: ['sh', '-c', 'echo -e "Checking for the availability of Key Manager deployment"; while ! nc -z {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-km-service 9443; do sleep 1; printf "-"; done; echo -e "  >> Key Manager has started";']
      - name: init-tm-1
        image: busybox:1.32
        command: ['sh', '-c', 'echo -e "Checking for the availability of TM instance one deployment"; while ! nc -z {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-tm-1-internal-service 9611; do sleep 1; printf "-"; done; echo -e "  >> TM instance one has started";']
      - name: init-tm-2
        image: busybox:1.32
        command: ['sh', '-c', 'echo -e "Checking for the availability of TM instance two deployment"; while ! nc -z {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-tm-2-internal-service 9611; do sleep 1; printf "-"; done; echo -e "  >> TM instance two has started";']
      - name: init-permissions-synapse
        image: busybox
#        command: [ "sh", "-c", "find /home/wso2carbon/wso2am-3.2.1/repository/deployment/server/synapse-configs -not -path '/home/wso2carbon/wso2am-3.2.1/repository/deployment/server/synapse-configs/.snapshot*' -exec chmod 777 {} +" ]
        command: [ "sh", "-c", "echo 'Setting permissions on /home/wso2carbon/wso2am-3.2.1/repository/deployment/server/synapse-configs...';
                    find /home/wso2carbon/wso2am-3.2.1/repository/deployment/server/synapse-configs -not -path '/home/wso2carbon/wso2am-3.2.1/repository/deployment/server/synapse-configs/.snapshot*' -exec chmod 777 {} +;
                    if [ $? -eq 0 ]; then
                      echo 'Permissions set successfully for synapse mount.';
                    else
                      echo 'Error setting permissions for synapse mount, please check the NFS server settings.';
                    fi;"
        ]
        volumeMounts:
          - name: wso2am-gateway-storage-volume
#            mountPath: /home/wso2carbon/wso2am-3.2.1/repository/deployment/server/synapse-configs
            mountPath: /home/wso2carbon/wso2am-3.2.1/repository/deployment/server/synapse-configs
      - name: init-permissions-logs
        image: busybox
#        command: [ "sh", "-c", "find /home/wso2carbon/wso2am-3.2.1/repository/logs -not -path '/home/wso2carbon/wso2am-3.2.1/repository/logs/.snapshot*' -exec chmod 777 {} +" ]
        command: [ "sh", "-c", "echo 'Setting permissions on /home/wso2carbon/wso2am-3.2.1/repository/logs...';
                    find /home/wso2carbon/wso2am-3.2.1/repository/logs -not -path '/home/wso2carbon/wso2am-3.2.1/repository/logs/.snapshot*' -exec chmod 777 {} +;
                    if [ $? -eq 0 ]; then
                      echo 'Permissions set successfully for log mount.';
                    else
                      echo 'Error setting permissions for log mount, please check the NFS server settings.';
                    fi;"
        ]
        volumeMounts:
          - name: wso2am-gateway-log-storage-volume
#            mountPath: /home/wso2carbon/wso2am-3.2.1/repository/logs
            mountPath: /home/wso2carbon/wso2am-3.2.1/repository/logs
      containers:
      - name: wso2am-gateway
        image: {{ .Values.wso2.deployment.am.image.registry }}/{{ .Values.wso2.deployment.am.image.repository }}:{{ .Values.wso2.deployment.am.image.tag }}
        imagePullPolicy: {{ .Values.wso2.deployment.am.image.imagePullPolicy }}
        env:
        - name: PROFILE_NAME
          value: gateway-worker
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: JVM_MEM_OPTS
          value: "-Xms{{ .Values.wso2.deployment.am.resources.jvm.heap.memory.xms }} -Xmx{{ .Values.wso2.deployment.am.resources.jvm.heap.memory.xmx }}"
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 8243
          initialDelaySeconds: {{ .Values.wso2.deployment.am.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.am.livenessProbe.periodSeconds }}
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 8243
          initialDelaySeconds: {{ .Values.wso2.deployment.am.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.am.readinessProbe.periodSeconds }}
        lifecycle:
          preStop:
            exec:
              command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
        resources:
          requests:
            memory: {{ .Values.wso2.deployment.am.resources.requests.memory }}
            cpu: {{ .Values.wso2.deployment.am.resources.requests.cpu }}
          limits:
            memory: {{ .Values.wso2.deployment.am.resources.limits.memory }}
            cpu: {{ .Values.wso2.deployment.am.resources.limits.cpu }}
        securityContext:
          runAsUser: 802
        ports:
        - containerPort: 8280
          protocol: TCP
        - containerPort: 8243
          protocol: TCP
        - containerPort: 9763
          protocol: TCP
        - containerPort: 9443
          protocol: TCP
        - containerPort: 8099
          protocol: TCP
        - containerPort: 9099
          protocol: TCP
        volumeMounts:
        - name: wso2am-gateway-storage-volume
#          mountPath: /home/wso2carbon/wso2am-3.2.1/repository/deployment/server/synapse-configs
          mountPath: /home/wso2carbon/wso2am-3.2.1/repository/deployment/server/synapse-configs
        - name: wso2am-gateway-default-artifacts
          mountPath: /home/wso2carbon/wso2-artifact-volume/repository/deployment/server/synapse-configs/default/sequences/_cors_request_handler_.xml
          subPath: _cors_request_handler_.xml
        - name: wso2am-gateway-log-storage-volume
#          mountPath: /home/wso2carbon/wso2am-3.2.1/repository/logs
          mountPath: /home/wso2carbon/wso2am-3.2.1/repository/logs
        - name: wso2am-gateway-conf
          mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
          subPath: deployment.toml
        - name: wso2am-gateway-conf
          mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/log4j2.properties
          subPath: log4j2.properties
        - name: wso2am-gateway-conf-entrypoint
          mountPath: /home/wso2carbon/docker-entrypoint.sh
          subPath: docker-entrypoint.sh
        - name: wso2am-wso2carbon-jks
          mountPath: /home/wso2carbon/wso2-config-volume/repository/resources/security/wso2carbon.jks
          subPath: wso2carbon.jks
        - name: wso2am-client-truststore-jks
          mountPath: /home/wso2carbon/wso2-config-volume/repository/resources/security/client-truststore.jks
          subPath: client-truststore.jks
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
      {{ if .Values.wso2.deployment.am.image.imagePullSecrets.enable }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.am.image.imagePullSecrets.secretName }}
      {{ end }}
      volumes:
        - name: wso2am-gateway-storage-volume
          persistentVolumeClaim:
            claimName: {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-gateway-shared-synapse-configs-volume-claim
        - name: wso2am-gateway-default-artifacts
          configMap:
            name: {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-gateway-default-artifacts
        - name: wso2am-gateway-log-storage-volume
          persistentVolumeClaim:
            claimName: {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-gateway-log-storage-volume-claim
        - name: wso2am-gateway-conf
          configMap:
            name: {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-gateway-conf-2
        - name: wso2am-gateway-conf-entrypoint
          configMap:
            name: {{ template "apim-321-multi-dc-aks.resource.prefix" . }}-am-gateway-conf-entrypoint
            defaultMode: 0407
        - name: wso2am-wso2carbon-jks
          secret:
            secretName: wso2carbon-jks
        - name: wso2am-client-truststore-jks
          secret:
            secretName: client-truststore-jks
